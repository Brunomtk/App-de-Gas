{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"accessibilityActiveDescendant\", \"accessibilityAtomic\", \"accessibilityAutoComplete\", \"accessibilityBusy\", \"accessibilityChecked\", \"accessibilityColumnCount\", \"accessibilityColumnIndex\", \"accessibilityColumnSpan\", \"accessibilityControls\", \"accessibilityCurrent\", \"accessibilityDescribedBy\", \"accessibilityDetails\", \"accessibilityDisabled\", \"accessibilityErrorMessage\", \"accessibilityExpanded\", \"accessibilityFlowTo\", \"accessibilityHasPopup\", \"accessibilityHidden\", \"accessibilityInvalid\", \"accessibilityKeyShortcuts\", \"accessibilityLabel\", \"accessibilityLabelledBy\", \"accessibilityLevel\", \"accessibilityLiveRegion\", \"accessibilityModal\", \"accessibilityMultiline\", \"accessibilityMultiSelectable\", \"accessibilityOrientation\", \"accessibilityOwns\", \"accessibilityPlaceholder\", \"accessibilityPosInSet\", \"accessibilityPressed\", \"accessibilityReadOnly\", \"accessibilityRequired\", \"accessibilityRole\", \"accessibilityRoleDescription\", \"accessibilityRowCount\", \"accessibilityRowIndex\", \"accessibilityRowSpan\", \"accessibilitySelected\", \"accessibilitySetSize\", \"accessibilitySort\", \"accessibilityValueMax\", \"accessibilityValueMin\", \"accessibilityValueNow\", \"accessibilityValueText\", \"classList\", \"dataSet\", \"focusable\", \"nativeID\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityState\", \"accessibilityValue\"];\nimport AccessibilityUtil from \"../AccessibilityUtil\";\nimport css from \"../../exports/StyleSheet/css\";\nimport StyleSheet from \"../../exports/StyleSheet\";\nimport styleResolver from \"../../exports/StyleSheet/styleResolver\";\nimport { STYLE_GROUPS } from \"../../exports/StyleSheet/constants\";\nvar emptyObject = {};\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\nvar uppercasePattern = /[A-Z]/g;\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\nfunction hyphenateString(str) {\n  return str.replace(uppercasePattern, toHyphenLower);\n}\nfunction processIDRefList(idRefList) {\n  return isArray(idRefList) ? idRefList.join(' ') : idRefList;\n}\nvar classes = css.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, STYLE_GROUPS.classicReset);\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\nvar createDOMProps = function createDOMProps(elementType, props) {\n  if (!props) {\n    props = emptyObject;\n  }\n  var _props = props,\n    accessibilityActiveDescendant = _props.accessibilityActiveDescendant,\n    accessibilityAtomic = _props.accessibilityAtomic,\n    accessibilityAutoComplete = _props.accessibilityAutoComplete,\n    accessibilityBusy = _props.accessibilityBusy,\n    accessibilityChecked = _props.accessibilityChecked,\n    accessibilityColumnCount = _props.accessibilityColumnCount,\n    accessibilityColumnIndex = _props.accessibilityColumnIndex,\n    accessibilityColumnSpan = _props.accessibilityColumnSpan,\n    accessibilityControls = _props.accessibilityControls,\n    accessibilityCurrent = _props.accessibilityCurrent,\n    accessibilityDescribedBy = _props.accessibilityDescribedBy,\n    accessibilityDetails = _props.accessibilityDetails,\n    accessibilityDisabled = _props.accessibilityDisabled,\n    accessibilityErrorMessage = _props.accessibilityErrorMessage,\n    accessibilityExpanded = _props.accessibilityExpanded,\n    accessibilityFlowTo = _props.accessibilityFlowTo,\n    accessibilityHasPopup = _props.accessibilityHasPopup,\n    accessibilityHidden = _props.accessibilityHidden,\n    accessibilityInvalid = _props.accessibilityInvalid,\n    accessibilityKeyShortcuts = _props.accessibilityKeyShortcuts,\n    accessibilityLabel = _props.accessibilityLabel,\n    accessibilityLabelledBy = _props.accessibilityLabelledBy,\n    accessibilityLevel = _props.accessibilityLevel,\n    accessibilityLiveRegion = _props.accessibilityLiveRegion,\n    accessibilityModal = _props.accessibilityModal,\n    accessibilityMultiline = _props.accessibilityMultiline,\n    accessibilityMultiSelectable = _props.accessibilityMultiSelectable,\n    accessibilityOrientation = _props.accessibilityOrientation,\n    accessibilityOwns = _props.accessibilityOwns,\n    accessibilityPlaceholder = _props.accessibilityPlaceholder,\n    accessibilityPosInSet = _props.accessibilityPosInSet,\n    accessibilityPressed = _props.accessibilityPressed,\n    accessibilityReadOnly = _props.accessibilityReadOnly,\n    accessibilityRequired = _props.accessibilityRequired,\n    accessibilityRole = _props.accessibilityRole,\n    accessibilityRoleDescription = _props.accessibilityRoleDescription,\n    accessibilityRowCount = _props.accessibilityRowCount,\n    accessibilityRowIndex = _props.accessibilityRowIndex,\n    accessibilityRowSpan = _props.accessibilityRowSpan,\n    accessibilitySelected = _props.accessibilitySelected,\n    accessibilitySetSize = _props.accessibilitySetSize,\n    accessibilitySort = _props.accessibilitySort,\n    accessibilityValueMax = _props.accessibilityValueMax,\n    accessibilityValueMin = _props.accessibilityValueMin,\n    accessibilityValueNow = _props.accessibilityValueNow,\n    accessibilityValueText = _props.accessibilityValueText,\n    classList = _props.classList,\n    dataSet = _props.dataSet,\n    focusable = _props.focusable,\n    nativeID = _props.nativeID,\n    pointerEvents = _props.pointerEvents,\n    providedStyle = _props.style,\n    testID = _props.testID,\n    accessible = _props.accessible,\n    accessibilityState = _props.accessibilityState,\n    accessibilityValue = _props.accessibilityValue,\n    domProps = _objectWithoutProperties(_props, _excluded);\n  var disabled = accessibilityState != null && accessibilityState.disabled === true || accessibilityDisabled;\n  var role = AccessibilityUtil.propsToAriaRole(props);\n  if (accessibilityState != null) {\n    for (var prop in accessibilityState) {\n      var value = accessibilityState[prop];\n      if (value != null) {\n        if (prop === 'disabled' || prop === 'hidden') {\n          if (value === true) {\n            domProps[\"aria-\" + prop] = value;\n            domProps[prop] = value;\n          }\n        } else {\n          domProps[\"aria-\" + prop] = value;\n        }\n      }\n    }\n  }\n  if (accessibilityValue != null) {\n    for (var _prop in accessibilityValue) {\n      var _value = accessibilityValue[_prop];\n      if (_value != null) {\n        domProps[\"aria-value\" + _prop] = _value;\n      }\n    }\n  }\n  if (accessibilityActiveDescendant != null) {\n    domProps['aria-activedescendant'] = accessibilityActiveDescendant;\n  }\n  if (accessibilityAtomic != null) {\n    domProps['aria-atomic'] = accessibilityAtomic;\n  }\n  if (accessibilityAutoComplete != null) {\n    domProps['aria-autocomplete'] = accessibilityAutoComplete;\n  }\n  if (accessibilityBusy != null) {\n    domProps['aria-busy'] = accessibilityBusy;\n  }\n  if (accessibilityChecked != null) {\n    domProps['aria-checked'] = accessibilityChecked;\n  }\n  if (accessibilityColumnCount != null) {\n    domProps['aria-colcount'] = accessibilityColumnCount;\n  }\n  if (accessibilityColumnIndex != null) {\n    domProps['aria-colindex'] = accessibilityColumnIndex;\n  }\n  if (accessibilityColumnSpan != null) {\n    domProps['aria-colspan'] = accessibilityColumnSpan;\n  }\n  if (accessibilityControls != null) {\n    domProps['aria-controls'] = processIDRefList(accessibilityControls);\n  }\n  if (accessibilityCurrent != null) {\n    domProps['aria-current'] = accessibilityCurrent;\n  }\n  if (accessibilityDescribedBy != null) {\n    domProps['aria-describedby'] = processIDRefList(accessibilityDescribedBy);\n  }\n  if (accessibilityDetails != null) {\n    domProps['aria-details'] = accessibilityDetails;\n  }\n  if (disabled === true) {\n    domProps['aria-disabled'] = true;\n    if (elementType === 'button' || elementType === 'form' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.disabled = true;\n    }\n  }\n  if (accessibilityErrorMessage != null) {\n    domProps['aria-errormessage'] = accessibilityErrorMessage;\n  }\n  if (accessibilityExpanded != null) {\n    domProps['aria-expanded'] = accessibilityExpanded;\n  }\n  if (accessibilityFlowTo != null) {\n    domProps['aria-flowto'] = processIDRefList(accessibilityFlowTo);\n  }\n  if (accessibilityHasPopup != null) {\n    domProps['aria-haspopup'] = accessibilityHasPopup;\n  }\n  if (accessibilityHidden === true) {\n    domProps['aria-hidden'] = accessibilityHidden;\n  }\n  if (accessibilityInvalid != null) {\n    domProps['aria-invalid'] = accessibilityInvalid;\n  }\n  if (accessibilityKeyShortcuts != null && Array.isArray(accessibilityKeyShortcuts)) {\n    domProps['aria-keyshortcuts'] = accessibilityKeyShortcuts.join(' ');\n  }\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n  if (accessibilityLabelledBy != null) {\n    domProps['aria-labelledby'] = processIDRefList(accessibilityLabelledBy);\n  }\n  if (accessibilityLevel != null) {\n    domProps['aria-level'] = accessibilityLevel;\n  }\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n  if (accessibilityModal != null) {\n    domProps['aria-modal'] = accessibilityModal;\n  }\n  if (accessibilityMultiline != null) {\n    domProps['aria-multiline'] = accessibilityMultiline;\n  }\n  if (accessibilityMultiSelectable != null) {\n    domProps['aria-multiselectable'] = accessibilityMultiSelectable;\n  }\n  if (accessibilityOrientation != null) {\n    domProps['aria-orientation'] = accessibilityOrientation;\n  }\n  if (accessibilityOwns != null) {\n    domProps['aria-owns'] = processIDRefList(accessibilityOwns);\n  }\n  if (accessibilityPlaceholder != null) {\n    domProps['aria-placeholder'] = accessibilityPlaceholder;\n  }\n  if (accessibilityPosInSet != null) {\n    domProps['aria-posinset'] = accessibilityPosInSet;\n  }\n  if (accessibilityPressed != null) {\n    domProps['aria-pressed'] = accessibilityPressed;\n  }\n  if (accessibilityReadOnly != null) {\n    domProps['aria-readonly'] = accessibilityReadOnly;\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.readOnly = true;\n    }\n  }\n  if (accessibilityRequired != null) {\n    domProps['aria-required'] = accessibilityRequired;\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.required = true;\n    }\n  }\n  if (role != null) {\n    domProps['role'] = role === 'none' ? 'presentation' : role;\n  }\n  if (accessibilityRoleDescription != null) {\n    domProps['aria-roledescription'] = accessibilityRoleDescription;\n  }\n  if (accessibilityRowCount != null) {\n    domProps['aria-rowcount'] = accessibilityRowCount;\n  }\n  if (accessibilityRowIndex != null) {\n    domProps['aria-rowindex'] = accessibilityRowIndex;\n  }\n  if (accessibilityRowSpan != null) {\n    domProps['aria-rowspan'] = accessibilityRowSpan;\n  }\n  if (accessibilitySelected != null) {\n    domProps['aria-selected'] = accessibilitySelected;\n  }\n  if (accessibilitySetSize != null) {\n    domProps['aria-setsize'] = accessibilitySetSize;\n  }\n  if (accessibilitySort != null) {\n    domProps['aria-sort'] = accessibilitySort;\n  }\n  if (accessibilityValueMax != null) {\n    domProps['aria-valuemax'] = accessibilityValueMax;\n  }\n  if (accessibilityValueMin != null) {\n    domProps['aria-valuemin'] = accessibilityValueMin;\n  }\n  if (accessibilityValueNow != null) {\n    domProps['aria-valuenow'] = accessibilityValueNow;\n  }\n  if (accessibilityValueText != null) {\n    domProps['aria-valuetext'] = accessibilityValueText;\n  }\n  if (dataSet != null) {\n    for (var dataProp in dataSet) {\n      if (hasOwnProperty.call(dataSet, dataProp)) {\n        var dataName = hyphenateString(dataProp);\n        var dataValue = dataSet[dataProp];\n        if (dataValue != null) {\n          domProps[\"data-\" + dataName] = dataValue;\n        }\n      }\n    }\n  }\n  var _focusable = focusable != null ? focusable : accessible;\n  if (_focusable === false) {\n    domProps.tabIndex = '-1';\n  }\n  if (elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n    if (_focusable === false || accessibilityDisabled === true) {\n      domProps.tabIndex = '-1';\n    }\n  } else if (role === 'button' || role === 'checkbox' || role === 'link' || role === 'radio' || role === 'textbox' || role === 'switch') {\n    if (_focusable !== false) {\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (_focusable === true) {\n      domProps.tabIndex = '0';\n    }\n  }\n  var reactNativeStyle = StyleSheet.compose(pointerEvents && pointerEventsStyles[pointerEvents], providedStyle);\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = elementType === 'a' || elementType === 'button' || elementType === 'li' || elementType === 'ul' || role === 'heading';\n  var finalClassList = [needsReset && classes.reset, needsCursor && classes.cursor, classList];\n  var _styleResolver$resolv = styleResolver.resolve(reactNativeStyle, finalClassList),\n    className = _styleResolver$resolv.className,\n    style = _styleResolver$resolv.style;\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n  if (style) {\n    domProps.style = style;\n  }\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  }\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  }\n  return domProps;\n};\nexport default createDOMProps;","map":{"version":3,"names":["AccessibilityUtil","css","StyleSheet","styleResolver","STYLE_GROUPS","emptyObject","hasOwnProperty","Object","prototype","isArray","Array","uppercasePattern","toHyphenLower","match","toLowerCase","hyphenateString","str","replace","processIDRefList","idRefList","join","classes","create","reset","backgroundColor","color","font","listStyle","margin","textAlign","textDecoration","cursor","classicReset","pointerEventsStyles","auto","pointerEvents","none","createDOMProps","elementType","props","_props","accessibilityActiveDescendant","accessibilityAtomic","accessibilityAutoComplete","accessibilityBusy","accessibilityChecked","accessibilityColumnCount","accessibilityColumnIndex","accessibilityColumnSpan","accessibilityControls","accessibilityCurrent","accessibilityDescribedBy","accessibilityDetails","accessibilityDisabled","accessibilityErrorMessage","accessibilityExpanded","accessibilityFlowTo","accessibilityHasPopup","accessibilityHidden","accessibilityInvalid","accessibilityKeyShortcuts","accessibilityLabel","accessibilityLabelledBy","accessibilityLevel","accessibilityLiveRegion","accessibilityModal","accessibilityMultiline","accessibilityMultiSelectable","accessibilityOrientation","accessibilityOwns","accessibilityPlaceholder","accessibilityPosInSet","accessibilityPressed","accessibilityReadOnly","accessibilityRequired","accessibilityRole","accessibilityRoleDescription","accessibilityRowCount","accessibilityRowIndex","accessibilityRowSpan","accessibilitySelected","accessibilitySetSize","accessibilitySort","accessibilityValueMax","accessibilityValueMin","accessibilityValueNow","accessibilityValueText","classList","dataSet","focusable","nativeID","providedStyle","style","testID","accessible","accessibilityState","accessibilityValue","domProps","_objectWithoutProperties","_excluded","disabled","role","propsToAriaRole","prop","value","readOnly","required","dataProp","call","dataName","dataValue","_focusable","tabIndex","reactNativeStyle","compose","needsCursor","needsReset","finalClassList","_styleResolver$resolv","resolve","className","id"],"sources":["C:/Users/leova/Desktop/marcio gas/marcio gas/node_modules/react-native-web/src/modules/createDOMProps/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport AccessibilityUtil from '../AccessibilityUtil';\nimport css from '../../exports/StyleSheet/css';\nimport StyleSheet from '../../exports/StyleSheet';\nimport styleResolver from '../../exports/StyleSheet/styleResolver';\nimport { STYLE_GROUPS } from '../../exports/StyleSheet/constants';\n\nconst emptyObject = {};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst isArray = Array.isArray;\n\nconst uppercasePattern = /[A-Z]/g;\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\nfunction hyphenateString(str: string): string {\n  return str.replace(uppercasePattern, toHyphenLower);\n}\nfunction processIDRefList(idRefList: string | Array<string>): string {\n  return isArray(idRefList) ? idRefList.join(' ') : idRefList;\n}\n\n// Reset styles for heading, link, and list DOM elements\nconst classes = css.create(\n  {\n    reset: {\n      backgroundColor: 'transparent',\n      color: 'inherit',\n      font: 'inherit',\n      listStyle: 'none',\n      margin: 0,\n      textAlign: 'inherit',\n      textDecoration: 'none'\n    },\n    cursor: {\n      cursor: 'pointer'\n    }\n  },\n  STYLE_GROUPS.classicReset\n);\n\nconst pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nconst createDOMProps = (elementType, props) => {\n  if (!props) {\n    props = emptyObject;\n  }\n\n  const {\n    accessibilityActiveDescendant,\n    accessibilityAtomic,\n    accessibilityAutoComplete,\n    accessibilityBusy,\n    accessibilityChecked,\n    accessibilityColumnCount,\n    accessibilityColumnIndex,\n    accessibilityColumnSpan,\n    accessibilityControls,\n    accessibilityCurrent,\n    accessibilityDescribedBy,\n    accessibilityDetails,\n    accessibilityDisabled,\n    accessibilityErrorMessage,\n    accessibilityExpanded,\n    accessibilityFlowTo,\n    accessibilityHasPopup,\n    accessibilityHidden,\n    accessibilityInvalid,\n    accessibilityKeyShortcuts,\n    accessibilityLabel,\n    accessibilityLabelledBy,\n    accessibilityLevel,\n    accessibilityLiveRegion,\n    accessibilityModal,\n    accessibilityMultiline,\n    accessibilityMultiSelectable,\n    accessibilityOrientation,\n    accessibilityOwns,\n    accessibilityPlaceholder,\n    accessibilityPosInSet,\n    accessibilityPressed,\n    accessibilityReadOnly,\n    accessibilityRequired,\n    /* eslint-disable */\n    accessibilityRole,\n    /* eslint-enable */\n    accessibilityRoleDescription,\n    accessibilityRowCount,\n    accessibilityRowIndex,\n    accessibilityRowSpan,\n    accessibilitySelected,\n    accessibilitySetSize,\n    accessibilitySort,\n    accessibilityValueMax,\n    accessibilityValueMin,\n    accessibilityValueNow,\n    accessibilityValueText,\n    classList,\n    dataSet,\n    focusable,\n    nativeID,\n    pointerEvents,\n    style: providedStyle,\n    testID,\n    // Deprecated\n    accessible,\n    accessibilityState,\n    accessibilityValue,\n    // Rest\n    ...domProps\n  } = props;\n\n  const disabled =\n    (accessibilityState != null && accessibilityState.disabled === true) || accessibilityDisabled;\n\n  const role = AccessibilityUtil.propsToAriaRole(props);\n\n  // DEPRECATED\n  if (accessibilityState != null) {\n    for (const prop in accessibilityState) {\n      const value = accessibilityState[prop];\n      if (value != null) {\n        if (prop === 'disabled' || prop === 'hidden') {\n          if (value === true) {\n            domProps[`aria-${prop}`] = value;\n            // also set prop directly to pick up host elementType behaviour\n            domProps[prop] = value;\n          }\n        } else {\n          domProps[`aria-${prop}`] = value;\n        }\n      }\n    }\n  }\n  if (accessibilityValue != null) {\n    for (const prop in accessibilityValue) {\n      const value = accessibilityValue[prop];\n      if (value != null) {\n        domProps[`aria-value${prop}`] = value;\n      }\n    }\n  }\n\n  // ACCESSIBILITY\n  if (accessibilityActiveDescendant != null) {\n    domProps['aria-activedescendant'] = accessibilityActiveDescendant;\n  }\n  if (accessibilityAtomic != null) {\n    domProps['aria-atomic'] = accessibilityAtomic;\n  }\n  if (accessibilityAutoComplete != null) {\n    domProps['aria-autocomplete'] = accessibilityAutoComplete;\n  }\n  if (accessibilityBusy != null) {\n    domProps['aria-busy'] = accessibilityBusy;\n  }\n  if (accessibilityChecked != null) {\n    domProps['aria-checked'] = accessibilityChecked;\n  }\n  if (accessibilityColumnCount != null) {\n    domProps['aria-colcount'] = accessibilityColumnCount;\n  }\n  if (accessibilityColumnIndex != null) {\n    domProps['aria-colindex'] = accessibilityColumnIndex;\n  }\n  if (accessibilityColumnSpan != null) {\n    domProps['aria-colspan'] = accessibilityColumnSpan;\n  }\n  if (accessibilityControls != null) {\n    domProps['aria-controls'] = processIDRefList(accessibilityControls);\n  }\n  if (accessibilityCurrent != null) {\n    domProps['aria-current'] = accessibilityCurrent;\n  }\n  if (accessibilityDescribedBy != null) {\n    domProps['aria-describedby'] = processIDRefList(accessibilityDescribedBy);\n  }\n  if (accessibilityDetails != null) {\n    domProps['aria-details'] = accessibilityDetails;\n  }\n  if (disabled === true) {\n    domProps['aria-disabled'] = true;\n    // Enhance with native semantics\n    if (\n      elementType === 'button' ||\n      elementType === 'form' ||\n      elementType === 'input' ||\n      elementType === 'select' ||\n      elementType === 'textarea'\n    ) {\n      domProps.disabled = true;\n    }\n  }\n  if (accessibilityErrorMessage != null) {\n    domProps['aria-errormessage'] = accessibilityErrorMessage;\n  }\n  if (accessibilityExpanded != null) {\n    domProps['aria-expanded'] = accessibilityExpanded;\n  }\n  if (accessibilityFlowTo != null) {\n    domProps['aria-flowto'] = processIDRefList(accessibilityFlowTo);\n  }\n  if (accessibilityHasPopup != null) {\n    domProps['aria-haspopup'] = accessibilityHasPopup;\n  }\n  if (accessibilityHidden === true) {\n    domProps['aria-hidden'] = accessibilityHidden;\n  }\n  if (accessibilityInvalid != null) {\n    domProps['aria-invalid'] = accessibilityInvalid;\n  }\n  if (accessibilityKeyShortcuts != null && Array.isArray(accessibilityKeyShortcuts)) {\n    domProps['aria-keyshortcuts'] = accessibilityKeyShortcuts.join(' ');\n  }\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n  if (accessibilityLabelledBy != null) {\n    domProps['aria-labelledby'] = processIDRefList(accessibilityLabelledBy);\n  }\n  if (accessibilityLevel != null) {\n    domProps['aria-level'] = accessibilityLevel;\n  }\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n  if (accessibilityModal != null) {\n    domProps['aria-modal'] = accessibilityModal;\n  }\n  if (accessibilityMultiline != null) {\n    domProps['aria-multiline'] = accessibilityMultiline;\n  }\n  if (accessibilityMultiSelectable != null) {\n    domProps['aria-multiselectable'] = accessibilityMultiSelectable;\n  }\n  if (accessibilityOrientation != null) {\n    domProps['aria-orientation'] = accessibilityOrientation;\n  }\n  if (accessibilityOwns != null) {\n    domProps['aria-owns'] = processIDRefList(accessibilityOwns);\n  }\n  if (accessibilityPlaceholder != null) {\n    domProps['aria-placeholder'] = accessibilityPlaceholder;\n  }\n  if (accessibilityPosInSet != null) {\n    domProps['aria-posinset'] = accessibilityPosInSet;\n  }\n  if (accessibilityPressed != null) {\n    domProps['aria-pressed'] = accessibilityPressed;\n  }\n  if (accessibilityReadOnly != null) {\n    domProps['aria-readonly'] = accessibilityReadOnly;\n    // Enhance with native semantics\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.readOnly = true;\n    }\n  }\n  if (accessibilityRequired != null) {\n    domProps['aria-required'] = accessibilityRequired;\n    // Enhance with native semantics\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.required = true;\n    }\n  }\n  if (role != null) {\n    // 'presentation' synonym has wider browser support\n    domProps['role'] = role === 'none' ? 'presentation' : role;\n  }\n  if (accessibilityRoleDescription != null) {\n    domProps['aria-roledescription'] = accessibilityRoleDescription;\n  }\n  if (accessibilityRowCount != null) {\n    domProps['aria-rowcount'] = accessibilityRowCount;\n  }\n  if (accessibilityRowIndex != null) {\n    domProps['aria-rowindex'] = accessibilityRowIndex;\n  }\n  if (accessibilityRowSpan != null) {\n    domProps['aria-rowspan'] = accessibilityRowSpan;\n  }\n  if (accessibilitySelected != null) {\n    domProps['aria-selected'] = accessibilitySelected;\n  }\n  if (accessibilitySetSize != null) {\n    domProps['aria-setsize'] = accessibilitySetSize;\n  }\n  if (accessibilitySort != null) {\n    domProps['aria-sort'] = accessibilitySort;\n  }\n  if (accessibilityValueMax != null) {\n    domProps['aria-valuemax'] = accessibilityValueMax;\n  }\n  if (accessibilityValueMin != null) {\n    domProps['aria-valuemin'] = accessibilityValueMin;\n  }\n  if (accessibilityValueNow != null) {\n    domProps['aria-valuenow'] = accessibilityValueNow;\n  }\n  if (accessibilityValueText != null) {\n    domProps['aria-valuetext'] = accessibilityValueText;\n  }\n\n  // \"dataSet\" replaced with \"data-*\"\n  if (dataSet != null) {\n    for (const dataProp in dataSet) {\n      if (hasOwnProperty.call(dataSet, dataProp)) {\n        const dataName = hyphenateString(dataProp);\n        const dataValue = dataSet[dataProp];\n        if (dataValue != null) {\n          domProps[`data-${dataName}`] = dataValue;\n        }\n      }\n    }\n  }\n\n  // FOCUS\n  // \"focusable\" indicates that an element may be a keyboard tab-stop.\n  const _focusable = focusable != null ? focusable : accessible;\n  if (_focusable === false) {\n    domProps.tabIndex = '-1';\n  }\n  if (\n    // These native elements are focusable by default\n    elementType === 'a' ||\n    elementType === 'button' ||\n    elementType === 'input' ||\n    elementType === 'select' ||\n    elementType === 'textarea'\n  ) {\n    if (_focusable === false || accessibilityDisabled === true) {\n      domProps.tabIndex = '-1';\n    }\n  } else if (\n    // These roles are made focusable by default\n    role === 'button' ||\n    role === 'checkbox' ||\n    role === 'link' ||\n    role === 'radio' ||\n    role === 'textbox' ||\n    role === 'switch'\n  ) {\n    if (_focusable !== false) {\n      domProps.tabIndex = '0';\n    }\n  } else {\n    // Everything else must explicitly set the prop\n    if (_focusable === true) {\n      domProps.tabIndex = '0';\n    }\n  }\n\n  // STYLE\n  const reactNativeStyle = StyleSheet.compose(\n    pointerEvents && pointerEventsStyles[pointerEvents],\n    providedStyle\n  );\n\n  // Additional style resets for interactive elements\n  const needsCursor = (role === 'button' || role === 'link') && !disabled;\n  const needsReset =\n    elementType === 'a' ||\n    elementType === 'button' ||\n    elementType === 'li' ||\n    elementType === 'ul' ||\n    role === 'heading';\n  // Classic CSS styles\n  const finalClassList = [needsReset && classes.reset, needsCursor && classes.cursor, classList];\n\n  // Resolve styles\n  const { className, style } = styleResolver.resolve(reactNativeStyle, finalClassList);\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  }\n\n  // OTHER\n  // Native element ID\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  }\n  // Automated test IDs\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}