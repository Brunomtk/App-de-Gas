{"ast":null,"code":"import React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction _handlePress(callback) {\n  requestAnimationFrame(callback);\n}\nvar Button = function Button(props) {\n  return Platform.OS === 'ios' ? _jsx(TouchableOpacity, {\n    disabled: props.disabled,\n    style: props.style,\n    onPress: function onPress() {\n      return _handlePress(props.onPress);\n    },\n    children: props.children\n  }) : _jsx(TouchableNativeFeedback, {\n    disabled: props.disabled,\n    onPress: function onPress() {\n      return _handlePress(props.onPress);\n    },\n    children: _jsx(View, {\n      style: props.style,\n      children: props.children\n    })\n  });\n};\nButton.defaultProps = {\n  onPress: function onPress() {}\n};\nexport default Button;","map":{"version":3,"names":["React","Component","Platform","TouchableOpacity","TouchableNativeFeedback","View","Text","jsx","_jsx","_handlePress","callback","requestAnimationFrame","Button","props","OS","disabled","style","onPress","children","defaultProps"],"sources":["C:/Users/leova/Desktop/marcio gas/marcio gas/node_modules/react-native-numeric-input/Button/Button.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n    Platform,\n    TouchableOpacity,\n    TouchableNativeFeedback,\n    View,\n    Text\n} from 'react-native';\n\nfunction _handlePress(callback){\n    requestAnimationFrame(callback)\n}\n\n\nconst Button = (props) => {\n    return (\n        Platform.OS === 'ios'\n        ? <TouchableOpacity disabled={props.disabled} style={props.style} onPress={() => _handlePress(props.onPress)}>{props.children}</TouchableOpacity> \n        : <TouchableNativeFeedback  disabled={props.disabled} onPress={() => _handlePress(props.onPress)}><View style={props.style}>{props.children}</View></TouchableNativeFeedback>\n    )\n}\n\nButton.defaultProps = {\n    onPress : () => {}\n}\n\nexport default Button;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,uBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AASzC,SAASC,YAAYA,CAACC,QAAQ,EAAC;EAC3BC,qBAAqB,CAACD,QAAQ,CAAC;AACnC;AAGA,IAAME,MAAM,GAAG,SAATA,MAAMA,CAAIC,KAAK,EAAK;EACtB,OACIX,QAAQ,CAACY,EAAE,KAAK,KAAK,GACnBN,IAAA,CAACL,gBAAgB;IAACY,QAAQ,EAAEF,KAAK,CAACE,QAAS;IAACC,KAAK,EAAEH,KAAK,CAACG,KAAM;IAACC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMR,YAAY,CAACI,KAAK,CAACI,OAAO,CAAC;IAAA,CAAC;IAAAC,QAAA,EAAEL,KAAK,CAACK;EAAQ,EAAoB,GAC/IV,IAAA,CAACJ,uBAAuB;IAAEW,QAAQ,EAAEF,KAAK,CAACE,QAAS;IAACE,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMR,YAAY,CAACI,KAAK,CAACI,OAAO,CAAC;IAAA,CAAC;IAAAC,QAAA,EAACV,IAAA,CAACH,IAAI;MAACW,KAAK,EAAEH,KAAK,CAACG,KAAM;MAAAE,QAAA,EAAEL,KAAK,CAACK;IAAQ;EAAQ,EAA0B;AAErL,CAAC;AAEDN,MAAM,CAACO,YAAY,GAAG;EAClBF,OAAO,EAAG,SAAAA,QAAA,EAAM,CAAC;AACrB,CAAC;AAED,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}